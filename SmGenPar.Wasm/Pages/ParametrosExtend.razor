@page "/Parametros/Extend/{ParameterName}"
@using System.Text.Json
@using System.Text.Json.Serialization
@using Newtonsoft.Json
@using SmGenPar.Logic.Models
@using SmGenPar.Wasm.Components
@using JsonSerializer = System.Text.Json.JsonSerializer
@using SmGenPar.Wasm

<h3>ParameterNames Extend</h3>

@(_renderFragments![ParameterName!])

<button type="submit" @onclick="OnSubmit">Submit</button>

@code {

    [Parameter]
    public string? ParameterName { get; set; }

    static readonly Extend? Model = (Extend)ObjectFormRender.Models["Extend"];
    
    Dictionary<string, RenderFragment>? _renderFragments;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _renderFragments = ObjectFormRender.RenderModelProperties(Model!);
    }

    void OnSubmit()
    {
        Console.WriteLine(Model);
    }
    
    static void OnValidSubmit(EditContext editContext)
    {
        Console.WriteLine(
            JsonSerializer.Serialize(editContext.Model)
            );
        Console.WriteLine(
            SerializeToXml(editContext.Model, "Extend")
            );
    }

    static string SerializeToXml(object obj, string rootName = "root")
    {
        var jsonOptions = new JsonSerializerOptions
        {
            DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull,
            WriteIndented = true,
        };
        var json = JsonSerializer.Serialize(obj, jsonOptions);
        var doc = JsonConvert.DeserializeXNode(json, rootName);
        return doc.ToString();
    }

}